global
  stats socket /var/run/api.sock user haproxy group haproxy mode 660 level admin expose-fd listeners
  log stdout format raw local0 info

defaults
  mode http
  timeout client 10s
  timeout connect 5s
  timeout server 10s
  timeout http-request 10s
  log global

resolvers docker_resolver
    nameserver dns 127.0.0.11:53

frontend stats
  bind *:8404
  stats enable
  stats uri /
  stats refresh 10s

#frontend front_http
#    bind 0.0.0.0:80
#    bind :::80
#
#    redirect scheme https code 301

frontend myfrontend
   # bind *:443 ssl crt /etc/ssl/vc.pem alpn h2,http/1.1
    bind *:80
    stats enable

    timeout http-request 10s                                                                                                                                                                                                                   
    timeout http-keep-alive 4s 

    #http-request redirect scheme https unless { ssl_fc }

#    http-request set-header X-SSL-Client-Cert          %{+Q}[ssl_c_der,base64]
#    http-request set-header X-SSL-Client-CN            %{+Q}[ssl_c_s_dn(cn)]
#    http-request set-header X-SSL-Client-Verify        %[ssl_c_verify]

    use_backend issuer if { path /issuer } || { path_beg /issuer/ }
    use_backend verifier if { path /verifier } || { path_beg /verifier/ }
    use_backend datastore if { path /datastore } || { path_beg /datastore/ }
    use_backend registry if { path /registry } || { path_beg /registry/ }

backend issuer
    http-request replace-path /issuer(/)?(.*) /\2
    server issuer_server issuer:8080 resolvers docker_resolver resolve-prefer ipv4
   # server issuer_server vc_issuer:8080 ssl verify optional crt-ignore-err all ca-file /cert/ladok_utv_dev.crt resolvers docker_resolver resolve-prefer ipv4

backend verifier
    http-request replace-path /verifier(/)?(.*) /\2
    server verifier_server verifier:8080 resolvers docker_resolver resolve-prefer ipv4

backend datastore
    http-request replace-path /datastore(/)?(.*) /\2
    server datastore_server datastore:8080 resolvers docker_resolver resolve-prefer ipv4

backend registry
    http-request replace-path /registry(/)?(.*) /\2
    server registry_server registry:8080 resolvers docker_resolver resolve-prefer ipv4

