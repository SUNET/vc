basePath: /datastore/api/v1
definitions:
  apiv1.GetDocumentReply:
    properties:
      data:
        $ref: '#/definitions/model.Upload'
    type: object
  apiv1.GetDocumentRequest:
    properties:
      authentic_source:
        type: string
      document_id:
        type: string
      document_type:
        type: string
    type: object
  apiv1.IDMappingReply:
    properties:
      data:
        properties:
          authentic_source_person_id:
            type: string
        type: object
    type: object
  apiv1.ListMetadataReply:
    properties:
      data:
        items:
          $ref: '#/definitions/model.MetaData'
        type: array
    type: object
  apiv1.ListMetadataRequest:
    properties:
      authentic_source:
        type: string
      authentic_source_person_id:
        type: string
    type: object
  apiv1.PortalReply:
    properties:
      data:
        items:
          $ref: '#/definitions/model.MetaData'
        type: array
    type: object
  apiv1.PortalRequest:
    properties:
      authentic_source:
        type: string
      authentic_source_person_id:
        type: string
    type: object
  apiv1.UploadReply:
    properties:
      data:
        properties:
          status:
            type: string
        type: object
    type: object
  helpers.Error:
    properties:
      details: {}
      title:
        type: string
    type: object
  helpers.ErrorResponse:
    properties:
      error:
        $ref: '#/definitions/helpers.Error'
    type: object
  model.MetaData:
    properties:
      authentic_source:
        type: string
      authentic_source_person_id:
        type: string
      collect_id:
        type: string
      date_of_birth:
        type: string
      document_id:
        type: string
      document_type:
        enum:
        - PDA1
        - EHIC
        type: string
      first_name:
        type: string
      last_name:
        type: string
      qr:
        $ref: '#/definitions/model.QR'
      revocation_id:
        type: string
      uid:
        type: string
    required:
    - authentic_source
    - authentic_source_person_id
    - collect_id
    - date_of_birth
    - document_id
    - document_type
    - first_name
    - last_name
    - qr
    - revocation_id
    - uid
    type: object
  model.QR:
    properties:
      base64_image:
        type: string
    required:
    - base64_image
    type: object
  model.Upload:
    properties:
      document_data: {}
      meta:
        $ref: '#/definitions/model.MetaData'
    required:
    - meta
    type: object
info:
  contact: {}
  title: Datastore API
  version: 0.1.0
paths:
  /document:
    post:
      consumes:
      - application/json
      description: Get document endpoint
      operationId: get-document
      parameters:
      - description: ' '
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/apiv1.GetDocumentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/apiv1.GetDocumentReply'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.ErrorResponse'
      summary: GetDocument
      tags:
      - dc4eu
  /document/collection_code:
    post:
      consumes:
      - application/json
      description: Get document by collect code endpoint
      operationId: get-document-collect-code
      parameters:
      - description: ' '
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.MetaData'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/apiv1.GetDocumentReply'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.ErrorResponse'
      summary: GetDocumentByCollectCode
      tags:
      - dc4eu
  /id_mapping:
    post:
      consumes:
      - application/json
      description: ID mapping endpoint
      operationId: id-mapping
      parameters:
      - description: ' '
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.MetaData'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/apiv1.IDMappingReply'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.ErrorResponse'
      summary: IDMapping
      tags:
      - dc4eu
  /metadata:
    post:
      consumes:
      - application/json
      description: List metadata endpoint
      operationId: list-metadata
      parameters:
      - description: ' '
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/apiv1.ListMetadataRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/apiv1.ListMetadataReply'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.ErrorResponse'
      summary: ListMetadata
      tags:
      - dc4eu
  /portal:
    post:
      consumes:
      - application/json
      description: Get portal data endpoint
      operationId: portal
      parameters:
      - description: ' '
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/apiv1.PortalRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/apiv1.PortalReply'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.ErrorResponse'
      summary: Portal
      tags:
      - dc4eu
  /upload:
    post:
      consumes:
      - application/json
      description: Upload endpoint
      operationId: generic-upload
      parameters:
      - description: ' '
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.Upload'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/apiv1.UploadReply'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.ErrorResponse'
      summary: Upload
      tags:
      - dc4eu
swagger: "2.0"
