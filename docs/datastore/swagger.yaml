basePath: /datastore/api/v1
definitions:
  apiv1.GenericQRReply:
    properties:
      base64_image:
        type: string
    type: object
  apiv1.GenericUploadReply:
    properties:
      status:
        type: string
    type: object
  ehic.CardHolder:
    properties:
      birthDate:
        type: string
      cardholderStatus:
        type: string
      familyName:
        type: string
      givenName:
        type: string
      id:
        type: string
    required:
    - birthDate
    - cardholderStatus
    - familyName
    - givenName
    - id
    type: object
  ehic.CardInformation:
    properties:
      expiryDate:
        type: string
      id:
        type: string
      invalidSince:
        type: string
      issuanceDate:
        type: string
      signature:
        $ref: '#/definitions/ehic.Signature'
      validSince:
        type: string
    required:
    - expiryDate
    - id
    - invalidSince
    - issuanceDate
    - signature
    - validSince
    type: object
  ehic.CompetentInstitution:
    properties:
      id:
        type: string
      institutionName:
        type: string
    required:
    - id
    - institutionName
    type: object
  ehic.Document:
    properties:
      cardHolder:
        $ref: '#/definitions/ehic.CardHolder'
      cardInformation:
        $ref: '#/definitions/ehic.CardInformation'
      competentInstitution:
        $ref: '#/definitions/ehic.CompetentInstitution'
      pid:
        $ref: '#/definitions/eidas.Identification'
      signature:
        $ref: '#/definitions/ehic.Signature'
    required:
    - cardHolder
    - cardInformation
    - competentInstitution
    - pid
    - signature
    type: object
  ehic.Signature:
    properties:
      issuer:
        type: string
      seal:
        type: string
    required:
    - issuer
    - seal
    type: object
  eidas.Identification:
    properties:
      exhibitorID:
        type: string
      firstName:
        type: string
      gender:
        type: string
      lastName:
        type: string
      pins:
        items:
          type: string
        type: array
    required:
    - exhibitorID
    - firstName
    - gender
    - lastName
    - pins
    type: object
  helpers.Error:
    properties:
      details: {}
      title:
        type: string
    type: object
  model.Collect:
    properties:
      token:
        type: string
      used_ts:
        type: string
      valid_until_ts:
        type: string
    type: object
  model.GenericAttributes:
    properties:
      authentic_source:
        type: string
      authentic_source_person_id:
        type: string
      current_address:
        type: string
      date_of_birth:
        type: string
      document_id:
        type: string
      document_type:
        enum:
        - PDA1
        - EHIC
        type: string
      first_name:
        type: string
      first_name_at_birth:
        type: string
      gender:
        type: string
      last_name:
        type: string
      last_name_at_birth:
        type: string
      place_of_birth:
        type: string
      revocation_id:
        type: string
      uid:
        type: string
    required:
    - authentic_source
    - authentic_source_person_id
    - date_of_birth
    - document_id
    - document_type
    - first_name
    - last_name
    - revocation_id
    - uid
    type: object
  model.GenericDocument:
    properties:
      ehic:
        $ref: '#/definitions/ehic.Document'
      pda1:
        $ref: '#/definitions/pda1.Document'
      testv1:
        $ref: '#/definitions/testv1.Document'
    type: object
  model.GenericUpload:
    properties:
      attributes:
        $ref: '#/definitions/model.GenericAttributes'
      collect:
        $ref: '#/definitions/model.Collect'
      document:
        $ref: '#/definitions/model.GenericDocument'
      revoke:
        $ref: '#/definitions/model.Revoke'
    required:
    - attributes
    - document
    type: object
  model.Response:
    properties:
      data: {}
      error: {}
    type: object
  model.Revoke:
    properties:
      token:
        type: string
      ts:
        type: string
    type: object
  pda1.AddressType:
    properties:
      buildingName:
        type: string
      countryCode:
        enum:
        - AT
        - BE
        - BG
        - CY
        - CZ
        - DE
        - DK
        - EE
        - EL
        - ES
        - FI
        - FR
        - HR
        - HU
        - IE
        - IT
        - LT
        - LU
        - LV
        - MT
        - NL
        - PL
        - PT
        - RO
        - SE
        - SI
        - SK
        - UK
        type: string
      postCode:
        type: string
      region:
        type: string
      streetNo:
        type: string
      town:
        type: string
    type: object
  pda1.BirthPlaceType:
    properties:
      countryCode:
        enum:
        - AT
        - BE
        - BG
        - CY
        - CZ
        - DE
        - DK
        - EE
        - EL
        - ES
        - FI
        - FR
        - HR
        - HU
        - IE
        - IT
        - LT
        - LU
        - LV
        - MT
        - NL
        - PL
        - PT
        - RO
        - SE
        - SI
        - SK
        - UK
        type: string
      region:
        type: string
      town:
        type: string
    type: object
  pda1.Document:
    properties:
      activityEmploymentDetails:
        $ref: '#/definitions/pda1.Section5'
      completingInstitution:
        $ref: '#/definitions/pda1.Section6'
      employmentDetails:
        $ref: '#/definitions/pda1.Section4'
      memberStateLegislation:
        $ref: '#/definitions/pda1.Section2'
      personalDetails:
        $ref: '#/definitions/pda1.Section1'
      statusConfirmation:
        $ref: '#/definitions/pda1.Section3'
    required:
    - personalDetails
    type: object
  pda1.Section1:
    properties:
      dateBirth:
        type: string
      forenames:
        type: string
      nationality:
        enum:
        - AT
        - BE
        - BG
        - HR
        - CY
        - CZ
        - DK
        - EE
        - FI
        - FR
        - DE
        - EL
        - HU
        - IS
        - IE
        - IT
        - LV
        - LI
        - LT
        - LU
        - MT
        - NL
        - "NO"
        - PL
        - PT
        - RO
        - SK
        - SI
        - ES
        - SE
        - CH
        - UK
        - XR
        - XS
        - XU
        - AF
        - AL
        - DZ
        - AD
        - AO
        - AG
        - AR
        - AM
        - AU
        - AZ
        - BS
        - BH
        - BD
        - BB
        - BY
        - BZ
        - BJ
        - BT
        - BO
        - BA
        - BW
        - BR
        - BN
        - BF
        - BI
        - KH
        - CM
        - CA
        - CV
        - CF
        - TD
        - CL
        - CN
        - CO
        - KM
        - CG
        - CD
        - CR
        - CI
        - CU
        - DJ
        - DM
        - DO
        - EC
        - EG
        - SV
        - GQ
        - ER
        - ET
        - FJ
        - GA
        - GM
        - GE
        - GH
        - GD
        - GT
        - GN
        - GW
        - GY
        - HT
        - VA
        - HN
        - IN
        - ID
        - IR
        - IQ
        - IL
        - JM
        - JP
        - JO
        - KZ
        - KE
        - KI
        - KP
        - KR
        - KW
        - KG
        - LA
        - LB
        - LS
        - LR
        - LY
        - MK
        - MG
        - MW
        - MY
        - MV
        - ML
        - MH
        - MR
        - MU
        - MX
        - FM
        - MD
        - MC
        - MN
        - ME
        - MA
        - MZ
        - MM
        - NA
        - NR
        - NP
        - NZ
        - NI
        - NE
        - NG
        - OM
        - PK
        - PW
        - PS
        - PA
        - PG
        - PY
        - PE
        - PH
        - QA
        - RU
        - RW
        - KN
        - LC
        - VC
        - WS
        - SM
        - ST
        - SA
        - SN
        - RS
        - SC
        - SL
        - SG
        - SB
        - SO
        - ZA
        - SS
        - LK
        - SD
        - SR
        - SZ
        - SY
        - TJ
        - TZ
        - TH
        - TL
        - TG
        - TO
        - TT
        - TN
        - TR
        - TM
        - TV
        - UG
        - UA
        - AE
        - US
        - UY
        - UZ
        - VU
        - VE
        - VN
        - YE
        - ZM
        - ZW
        - BQAQ
        - BUMM
        - BYAA
        - CTKI
        - CSHH
        - DYBJ
        - NQAQ
        - TPTL
        - FXFR
        - AIDJ
        - FQHH
        - DDDE
        - GEHH
        - JTUM
        - MIUM
        - ANHH
        - NTHH
        - NHVU
        - PCHH
        - PZPA
        - CSXX
        - SKIN
        - RHZW
        - HVBF
        - PUUM
        - SUHH
        - VDVN
        - WKUM
        - YDYE
        - YUCS
        - ZRCD
        type: string
      personalIdentificationNumber:
        type: string
      placeBirth:
        $ref: '#/definitions/pda1.BirthPlaceType'
      sex:
        enum:
        - "01"
        - "02"
        - "98"
        - "99"
        type: string
      stateOfResidenceAddress:
        $ref: '#/definitions/pda1.AddressType'
      stateOfStayAddress:
        $ref: '#/definitions/pda1.AddressType'
      surname:
        type: string
      surnameAtBirth:
        type: string
    type: object
  pda1.Section2:
    properties:
      certificateForDurationActivity:
        type: boolean
      determinationProvisional:
        type: boolean
      endingDate:
        type: string
      memberStateWhichLegislationApplies:
        enum:
        - AT
        - BE
        - BG
        - CY
        - CZ
        - DE
        - DK
        - EE
        - EL
        - ES
        - FI
        - FR
        - HR
        - HU
        - IE
        - IT
        - LT
        - LU
        - LV
        - MT
        - NL
        - PL
        - PT
        - RO
        - SE
        - SI
        - SK
        - UK
        type: string
      startingDate:
        type: string
      transitionRulesApplyAsEC8832004:
        type: boolean
    type: object
  pda1.Section3:
    properties:
      civilAndEmployedSelfEmployed:
        type: boolean
      civilServant:
        type: boolean
      contractStaff:
        type: boolean
      employedAndSelfEmployed:
        type: boolean
      employedTwoOrMoreStates:
        type: boolean
      exception:
        type: boolean
      exceptionDescription:
        type: string
      flightCrewMember:
        type: boolean
      mariner:
        type: boolean
      postedEmployedPerson:
        type: boolean
      postedSelfEmployedPerson:
        type: boolean
      selfEmployedTwoOrMoreStates:
        type: boolean
      workingInStateUnder21:
        type: boolean
    type: object
  pda1.Section4:
    properties:
      employee:
        type: boolean
      employerSelfEmployedActivityCodes:
        items:
          type: string
        type: array
      nameBusinessName:
        type: string
      registeredAddress:
        $ref: '#/definitions/pda1.AddressType'
      selfEmployedActivity:
        type: boolean
    type: object
  pda1.Section5:
    properties:
      noFixedAddress:
        type: boolean
      noFixedAddressDescription:
        type: string
      workPlaceAddresses:
        items:
          $ref: '#/definitions/pda1.WorkPlaceAddressType'
        type: array
      workPlaceAddressesBlob:
        type: string
      workPlaceNames:
        items:
          $ref: '#/definitions/pda1.WorkPlaceNameType'
        type: array
      workPlaceNamesBlob:
        type: string
    type: object
  pda1.Section6:
    properties:
      address:
        $ref: '#/definitions/pda1.AddressType'
      date:
        type: string
      email:
        type: string
      institutionID:
        type: string
      name:
        type: string
      officeFaxNo:
        type: string
      officePhoneNo:
        type: string
      signature:
        type: string
    type: object
  pda1.WorkPlaceAddressType:
    properties:
      addresses:
        type: string
      homeBases:
        type: string
      hostStates:
        type: string
      nameOfShips:
        type: string
    type: object
  pda1.WorkPlaceNameType:
    properties:
      companyNameVesselName:
        type: string
      flagStatehomeBase:
        type: string
      seqno:
        type: integer
    type: object
  testv1.Address:
    properties:
      country:
        type: string
      street:
        type: string
    required:
    - country
    - street
    type: object
  testv1.Document:
    properties:
      address:
        $ref: '#/definitions/testv1.Address'
      name:
        $ref: '#/definitions/testv1.Name'
    required:
    - address
    - name
    type: object
  testv1.Name:
    properties:
      family_name:
        type: string
      given_name:
        type: string
    required:
    - family_name
    - given_name
    type: object
info:
  contact: {}
  title: Datastore API
  version: 0.1.0
paths:
  /document:
    post:
      consumes:
      - application/json
      description: Get document endpoint
      operationId: generic-get
      parameters:
      - description: ' '
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.GenericAttributes'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/model.Response'
            - properties:
                data:
                  $ref: '#/definitions/model.GenericUpload'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.Response'
            - properties:
                error:
                  $ref: '#/definitions/helpers.Error'
              type: object
      summary: Generic get one document
      tags:
      - dc4eu
  /list:
    post:
      consumes:
      - application/json
      description: List endpoint
      operationId: generic-list
      parameters:
      - description: ' '
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.GenericAttributes'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/model.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/model.GenericUpload'
                  type: array
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.Response'
            - properties:
                error:
                  $ref: '#/definitions/helpers.Error'
              type: object
      summary: Generic list documents
      tags:
      - dc4eu
  /qr:
    post:
      consumes:
      - application/json
      description: QR code generator endpoint
      operationId: generic-qr
      parameters:
      - description: ' '
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.GenericAttributes'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/model.Response'
            - properties:
                data:
                  $ref: '#/definitions/apiv1.GenericQRReply'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.Response'
            - properties:
                error:
                  $ref: '#/definitions/helpers.Error'
              type: object
      summary: Generic QR code generator
      tags:
      - dc4eu
  /upload:
    post:
      consumes:
      - application/json
      description: Upload endpoint
      operationId: generic-upload
      parameters:
      - description: ' '
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.GenericUpload'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            allOf:
            - $ref: '#/definitions/model.Response'
            - properties:
                data:
                  $ref: '#/definitions/apiv1.GenericUploadReply'
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/model.Response'
            - properties:
                error:
                  $ref: '#/definitions/helpers.Error'
              type: object
      summary: Generic upload
      tags:
      - dc4eu
swagger: "2.0"
