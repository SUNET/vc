basePath: /api/v1
definitions:
  apiv1.GetDocumentReply:
    properties:
      data:
        $ref: '#/definitions/model.Upload'
    type: object
  apiv1.GetDocumentRequest:
    properties:
      authentic_source:
        type: string
      document_id:
        type: string
      document_type:
        type: string
    type: object
  apiv1.IDMappingReply:
    properties:
      data:
        properties:
          authentic_source_person_id:
            type: string
        type: object
    type: object
  apiv1.ListMetadataReply:
    properties:
      data:
        items:
          $ref: '#/definitions/model.MetaData'
        type: array
    type: object
  apiv1.ListMetadataRequest:
    properties:
      authentic_source:
        type: string
      authentic_source_person_id:
        type: string
    type: object
  apiv1.PortalReply:
    properties:
      data:
        items:
          $ref: '#/definitions/model.MetaData'
        type: array
    type: object
  apiv1.PortalRequest:
    properties:
      authentic_source:
        type: string
      authentic_source_person_id:
        type: string
    type: object
  apiv1.UploadReply:
    properties:
      data:
        properties:
          status:
            type: string
        type: object
    type: object
  helpers.Error:
    properties:
      details: {}
      title:
        type: string
    type: object
  helpers.ErrorResponse:
    properties:
      error:
        $ref: '#/definitions/helpers.Error'
    type: object
  model.Attestation:
    properties:
      attestation_type:
        description: |-
          required: true
          example: secure
        type: string
      attestation_version:
        description: |-
          TODO(masv): change AttestationDataVersion to AttestationVersion, data seems redundant
          required: true
          example: 1.0.0
        type: integer
      description_long:
        description: |-
          TODO(masv): change TextLong to DescriptionLong
          required: true
          example: European Health Insurance Card
        type: string
      short_text:
        description: |-
          TODO(masv): ShortText to DescriptionShort, more descriptive, pun intended
          required: true
          example: EHIC
        type: string
      valid_from:
        description: |-
          TODO(masv): ISO8601?
          required: true
          example: 2024-01-01
        type: string
      valid_to:
        description: |-
          TODO(masv): ISO8601?
          required: true
          example: 2024-12-31
        type: string
    required:
    - attestation_type
    - attestation_version
    - description_long
    - short_text
    - valid_from
    - valid_to
    type: object
  model.Identity:
    properties:
      age_birth_year:
        description: |-
          TODO(masv): int instead of string?
          required: false
          example: 1970
        type: string
      age_in_years:
        description: |-
          TODO(masv): int instead of string?
          required: false
          example: 19
        type: string
      age_over_18:
        description: |-
          TODO(masv): int instead of string?
          required: false
          example: 19
        type: string
      age_over_nn:
        description: |-
          TODO(masv): int instead of string? How is supposed to work, query NN?
          required: false
          example: 19
        type: string
      birth_city:
        description: |-
          required: false
          example: Stockholm
        type: string
      birth_country:
        description: |-
          TODO(masv): full name or just country code?
          required: false
          example: sweden
        type: string
      birth_date:
        description: |-
          required: true
          example: 1970-01-01
        type: string
      birth_place:
        description: |-
          required: false
          example: Stockholm
        type: string
      birth_state:
        description: |-
          required: false
          example: Stockholm
        type: string
      family_name:
        description: |-
          required: true
          example: Svensson
        type: string
      family_name_at_birth:
        description: |-
          required: false
          example: Karlsson
        type: string
      gender:
        description: |-
          TODO(masv): male,female,other,unknown? should this be a string?
          required: false
          example: male
        type: string
      given_name:
        description: |-
          required: true
          example: Magnus
        type: string
      given_name_at_birth:
        description: |-
          required: false
          example: Magnus
        type: string
      identity_data_version:
        description: |-
          required: true
          example: 1.0.0
        type: string
      nationality:
        description: |-
          required: false
          example: swedish
        type: string
      resident_address:
        description: |-
          required: false
          example: 221b baker street
        type: string
      resident_city:
        description: |-
          required: false
          example: london
        type: string
      resident_country:
        description: |-
          required: false
          example: england
        type: string
      resident_house_number:
        description: |-
          required: false
          example: 221b
        type: string
      resident_postal_code:
        description: |-
          required: false
          example: W1U 6SG
        type: string
      resident_state:
        description: |-
          required: false
          example: england
        type: string
      resident_street:
        description: |-
          required: false
          example: baker street
        type: string
      uuid:
        description: |-
          TODO(masv): change to UUID from "unique_id"
          required: true
          example: 85f90d4c-c03f-11ee-9386-ef1b105c4f3e
        type: string
    required:
    - birth_date
    - family_name
    - given_name
    - identity_data_version
    - uuid
    type: object
  model.MetaData:
    properties:
      authentic_source:
        description: |-
          required: true
          example: Sunet
        type: string
      authentic_source_person_id:
        description: |-
          required: true
          example: 65636cbc-c03f-11ee-8dc4-67135cc9bd8a
        type: string
      collect_id:
        description: |-
          required: false
          example: 98fe67fc-c03f-11ee-bbee-4345224d414f
        type: string
      date_of_birth:
        description: |-
          required: true
          example: 1970-01-01
        type: string
      document_data_version:
        description: |-
          required: true
          example: 1.0.0
        type: string
      document_id:
        description: |-
          required: true
          example: 5e7a981c-c03f-11ee-b116-9b12c59362b9
        type: string
      document_type:
        description: |-
          required: true
          example: PDA1
        enum:
        - PDA1
        - EHIC
        type: string
      first_name:
        description: |-
          required: true
          example: John
        type: string
      last_name:
        description: |-
          required: true
          example: Doe
        type: string
      revocation_id:
        description: |-
          required: false
          example: 8dbd2680-c03f-11ee-a21b-034aafe41222
        type: string
      uid:
        description: |-
          required: true
          example: 85f90d4c-c03f-11ee-9386-ef1b105c4f3e
        type: string
    required:
    - authentic_source
    - authentic_source_person_id
    - date_of_birth
    - document_data_version
    - document_id
    - document_type
    - first_name
    - last_name
    - uid
    type: object
  model.Upload:
    properties:
      attestation:
        $ref: '#/definitions/model.Attestation'
      document_data: {}
      identity:
        $ref: '#/definitions/model.Identity'
      meta:
        $ref: '#/definitions/model.MetaData'
    required:
    - meta
    type: object
info:
  contact: {}
  title: Datastore API
  version: 0.1.0
paths:
  /document:
    post:
      consumes:
      - application/json
      description: Get document endpoint
      operationId: get-document
      parameters:
      - description: ' '
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/apiv1.GetDocumentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/apiv1.GetDocumentReply'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.ErrorResponse'
      summary: GetDocument
      tags:
      - dc4eu
  /document/collection_code:
    post:
      consumes:
      - application/json
      description: Get document by collect code endpoint
      operationId: get-document-collect-code
      parameters:
      - description: ' '
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.MetaData'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/apiv1.GetDocumentReply'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.ErrorResponse'
      summary: GetDocumentByCollectCode
      tags:
      - dc4eu
  /id_mapping:
    post:
      consumes:
      - application/json
      description: ID mapping endpoint
      operationId: id-mapping
      parameters:
      - description: ' '
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.MetaData'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/apiv1.IDMappingReply'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.ErrorResponse'
      summary: IDMapping
      tags:
      - dc4eu
  /metadata:
    post:
      consumes:
      - application/json
      description: List metadata endpoint
      operationId: list-metadata
      parameters:
      - description: ' '
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/apiv1.ListMetadataRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/apiv1.ListMetadataReply'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.ErrorResponse'
      summary: ListMetadata
      tags:
      - dc4eu
  /portal:
    post:
      consumes:
      - application/json
      description: Get portal data endpoint
      operationId: portal
      parameters:
      - description: ' '
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/apiv1.PortalRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/apiv1.PortalReply'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.ErrorResponse'
      summary: Portal
      tags:
      - dc4eu
  /upload:
    post:
      consumes:
      - application/json
      description: Upload endpoint
      operationId: upload
      parameters:
      - description: ' '
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.Upload'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/apiv1.UploadReply'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.ErrorResponse'
      summary: Upload
      tags:
      - dc4eu
swagger: "2.0"
