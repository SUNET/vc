// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/document": {
            "post": {
                "description": "Get document endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dc4eu"
                ],
                "summary": "Generic get one document",
                "operationId": "generic-get",
                "parameters": [
                    {
                        "description": " ",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GenericAttributes"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/model.GenericUpload"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/helpers.Error"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/list": {
            "post": {
                "description": "List endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dc4eu"
                ],
                "summary": "Generic list documents",
                "operationId": "generic-list",
                "parameters": [
                    {
                        "description": " ",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GenericAttributes"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/model.GenericUpload"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/helpers.Error"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/qr": {
            "post": {
                "description": "QR code generator endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dc4eu"
                ],
                "summary": "Generic QR code generator",
                "operationId": "generic-qr",
                "parameters": [
                    {
                        "description": " ",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GenericAttributes"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/apiv1.GenericQRReply"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/helpers.Error"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/upload": {
            "post": {
                "description": "Upload endpoint",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dc4eu"
                ],
                "summary": "Generic upload",
                "operationId": "generic-upload",
                "parameters": [
                    {
                        "description": " ",
                        "name": "req",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.GenericUpload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/apiv1.GenericUploadReply"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/model.Response"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "error": {
                                            "$ref": "#/definitions/helpers.Error"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apiv1.GenericQRReply": {
            "type": "object",
            "properties": {
                "base64_image": {
                    "type": "string"
                }
            }
        },
        "apiv1.GenericUploadReply": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                }
            }
        },
        "ehic.CardHolder": {
            "type": "object",
            "required": [
                "birthDate",
                "cardholderStatus",
                "familyName",
                "givenName",
                "id"
            ],
            "properties": {
                "birthDate": {
                    "type": "string"
                },
                "cardholderStatus": {
                    "type": "string"
                },
                "familyName": {
                    "type": "string"
                },
                "givenName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "ehic.CardInformation": {
            "type": "object",
            "required": [
                "expiryDate",
                "id",
                "invalidSince",
                "issuanceDate",
                "signature",
                "validSince"
            ],
            "properties": {
                "expiryDate": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "invalidSince": {
                    "type": "string"
                },
                "issuanceDate": {
                    "type": "string"
                },
                "signature": {
                    "$ref": "#/definitions/ehic.Signature"
                },
                "validSince": {
                    "type": "string"
                }
            }
        },
        "ehic.CompetentInstitution": {
            "type": "object",
            "required": [
                "id",
                "institutionName"
            ],
            "properties": {
                "id": {
                    "type": "string"
                },
                "institutionName": {
                    "type": "string"
                }
            }
        },
        "ehic.Document": {
            "type": "object",
            "required": [
                "cardHolder",
                "cardInformation",
                "competentInstitution",
                "pid",
                "signature"
            ],
            "properties": {
                "cardHolder": {
                    "$ref": "#/definitions/ehic.CardHolder"
                },
                "cardInformation": {
                    "$ref": "#/definitions/ehic.CardInformation"
                },
                "competentInstitution": {
                    "$ref": "#/definitions/ehic.CompetentInstitution"
                },
                "pid": {
                    "$ref": "#/definitions/eidas.Identification"
                },
                "signature": {
                    "$ref": "#/definitions/ehic.Signature"
                }
            }
        },
        "ehic.Signature": {
            "type": "object",
            "required": [
                "issuer",
                "seal"
            ],
            "properties": {
                "issuer": {
                    "type": "string"
                },
                "seal": {
                    "type": "string"
                }
            }
        },
        "eidas.Identification": {
            "type": "object",
            "required": [
                "exhibitorID",
                "firstName",
                "gender",
                "lastName",
                "pins"
            ],
            "properties": {
                "exhibitorID": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "pins": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "helpers.Error": {
            "type": "object",
            "properties": {
                "details": {},
                "title": {
                    "type": "string"
                }
            }
        },
        "model.Collect": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                },
                "used_ts": {
                    "type": "string"
                },
                "valid_until_ts": {
                    "type": "string"
                }
            }
        },
        "model.GenericAttributes": {
            "type": "object",
            "required": [
                "authentic_source",
                "authentic_source_person_id",
                "date_of_birth",
                "document_id",
                "document_type",
                "first_name",
                "last_name",
                "revocation_id",
                "uid"
            ],
            "properties": {
                "authentic_source": {
                    "type": "string"
                },
                "authentic_source_person_id": {
                    "type": "string"
                },
                "current_address": {
                    "type": "string"
                },
                "date_of_birth": {
                    "type": "string"
                },
                "document_id": {
                    "type": "string"
                },
                "document_type": {
                    "type": "string",
                    "enum": [
                        "PDA1",
                        "EHIC"
                    ]
                },
                "first_name": {
                    "type": "string"
                },
                "first_name_at_birth": {
                    "type": "string"
                },
                "gender": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "last_name_at_birth": {
                    "type": "string"
                },
                "place_of_birth": {
                    "type": "string"
                },
                "revocation_id": {
                    "type": "string"
                },
                "uid": {
                    "type": "string"
                }
            }
        },
        "model.GenericDocument": {
            "type": "object",
            "properties": {
                "ehic": {
                    "$ref": "#/definitions/ehic.Document"
                },
                "pda1": {
                    "$ref": "#/definitions/pda1.Document"
                },
                "testv1": {
                    "$ref": "#/definitions/testv1.Document"
                }
            }
        },
        "model.GenericUpload": {
            "type": "object",
            "required": [
                "attributes",
                "document"
            ],
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/model.GenericAttributes"
                },
                "collect": {
                    "$ref": "#/definitions/model.Collect"
                },
                "document": {
                    "$ref": "#/definitions/model.GenericDocument"
                },
                "revoke": {
                    "$ref": "#/definitions/model.Revoke"
                }
            }
        },
        "model.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "error": {}
            }
        },
        "model.Revoke": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                },
                "ts": {
                    "type": "string"
                }
            }
        },
        "pda1.AddressType": {
            "type": "object",
            "properties": {
                "buildingName": {
                    "type": "string"
                },
                "countryCode": {
                    "type": "string",
                    "enum": [
                        "AT",
                        "BE",
                        "BG",
                        "CY",
                        "CZ",
                        "DE",
                        "DK",
                        "EE",
                        "EL",
                        "ES",
                        "FI",
                        "FR",
                        "HR",
                        "HU",
                        "IE",
                        "IT",
                        "LT",
                        "LU",
                        "LV",
                        "MT",
                        "NL",
                        "PL",
                        "PT",
                        "RO",
                        "SE",
                        "SI",
                        "SK",
                        "UK"
                    ]
                },
                "postCode": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "streetNo": {
                    "type": "string"
                },
                "town": {
                    "type": "string"
                }
            }
        },
        "pda1.BirthPlaceType": {
            "type": "object",
            "properties": {
                "countryCode": {
                    "type": "string",
                    "enum": [
                        "AT",
                        "BE",
                        "BG",
                        "CY",
                        "CZ",
                        "DE",
                        "DK",
                        "EE",
                        "EL",
                        "ES",
                        "FI",
                        "FR",
                        "HR",
                        "HU",
                        "IE",
                        "IT",
                        "LT",
                        "LU",
                        "LV",
                        "MT",
                        "NL",
                        "PL",
                        "PT",
                        "RO",
                        "SE",
                        "SI",
                        "SK",
                        "UK"
                    ]
                },
                "region": {
                    "type": "string"
                },
                "town": {
                    "type": "string"
                }
            }
        },
        "pda1.Document": {
            "type": "object",
            "required": [
                "personalDetails"
            ],
            "properties": {
                "activityEmploymentDetails": {
                    "$ref": "#/definitions/pda1.Section5"
                },
                "completingInstitution": {
                    "$ref": "#/definitions/pda1.Section6"
                },
                "employmentDetails": {
                    "$ref": "#/definitions/pda1.Section4"
                },
                "memberStateLegislation": {
                    "$ref": "#/definitions/pda1.Section2"
                },
                "personalDetails": {
                    "$ref": "#/definitions/pda1.Section1"
                },
                "statusConfirmation": {
                    "$ref": "#/definitions/pda1.Section3"
                }
            }
        },
        "pda1.Section1": {
            "type": "object",
            "properties": {
                "dateBirth": {
                    "type": "string"
                },
                "forenames": {
                    "type": "string"
                },
                "nationality": {
                    "type": "string",
                    "enum": [
                        "AT",
                        "BE",
                        "BG",
                        "HR",
                        "CY",
                        "CZ",
                        "DK",
                        "EE",
                        "FI",
                        "FR",
                        "DE",
                        "EL",
                        "HU",
                        "IS",
                        "IE",
                        "IT",
                        "LV",
                        "LI",
                        "LT",
                        "LU",
                        "MT",
                        "NL",
                        "NO",
                        "PL",
                        "PT",
                        "RO",
                        "SK",
                        "SI",
                        "ES",
                        "SE",
                        "CH",
                        "UK",
                        "XR",
                        "XS",
                        "XU",
                        "AF",
                        "AL",
                        "DZ",
                        "AD",
                        "AO",
                        "AG",
                        "AR",
                        "AM",
                        "AU",
                        "AZ",
                        "BS",
                        "BH",
                        "BD",
                        "BB",
                        "BY",
                        "BZ",
                        "BJ",
                        "BT",
                        "BO",
                        "BA",
                        "BW",
                        "BR",
                        "BN",
                        "BF",
                        "BI",
                        "KH",
                        "CM",
                        "CA",
                        "CV",
                        "CF",
                        "TD",
                        "CL",
                        "CN",
                        "CO",
                        "KM",
                        "CG",
                        "CD",
                        "CR",
                        "CI",
                        "CU",
                        "DJ",
                        "DM",
                        "DO",
                        "EC",
                        "EG",
                        "SV",
                        "GQ",
                        "ER",
                        "ET",
                        "FJ",
                        "GA",
                        "GM",
                        "GE",
                        "GH",
                        "GD",
                        "GT",
                        "GN",
                        "GW",
                        "GY",
                        "HT",
                        "VA",
                        "HN",
                        "IN",
                        "ID",
                        "IR",
                        "IQ",
                        "IL",
                        "JM",
                        "JP",
                        "JO",
                        "KZ",
                        "KE",
                        "KI",
                        "KP",
                        "KR",
                        "KW",
                        "KG",
                        "LA",
                        "LB",
                        "LS",
                        "LR",
                        "LY",
                        "MK",
                        "MG",
                        "MW",
                        "MY",
                        "MV",
                        "ML",
                        "MH",
                        "MR",
                        "MU",
                        "MX",
                        "FM",
                        "MD",
                        "MC",
                        "MN",
                        "ME",
                        "MA",
                        "MZ",
                        "MM",
                        "NA",
                        "NR",
                        "NP",
                        "NZ",
                        "NI",
                        "NE",
                        "NG",
                        "OM",
                        "PK",
                        "PW",
                        "PS",
                        "PA",
                        "PG",
                        "PY",
                        "PE",
                        "PH",
                        "QA",
                        "RU",
                        "RW",
                        "KN",
                        "LC",
                        "VC",
                        "WS",
                        "SM",
                        "ST",
                        "SA",
                        "SN",
                        "RS",
                        "SC",
                        "SL",
                        "SG",
                        "SB",
                        "SO",
                        "ZA",
                        "SS",
                        "LK",
                        "SD",
                        "SR",
                        "SZ",
                        "SY",
                        "TJ",
                        "TZ",
                        "TH",
                        "TL",
                        "TG",
                        "TO",
                        "TT",
                        "TN",
                        "TR",
                        "TM",
                        "TV",
                        "UG",
                        "UA",
                        "AE",
                        "US",
                        "UY",
                        "UZ",
                        "VU",
                        "VE",
                        "VN",
                        "YE",
                        "ZM",
                        "ZW",
                        "BQAQ",
                        "BUMM",
                        "BYAA",
                        "CTKI",
                        "CSHH",
                        "DYBJ",
                        "NQAQ",
                        "TPTL",
                        "FXFR",
                        "AIDJ",
                        "FQHH",
                        "DDDE",
                        "GEHH",
                        "JTUM",
                        "MIUM",
                        "ANHH",
                        "NTHH",
                        "NHVU",
                        "PCHH",
                        "PZPA",
                        "CSXX",
                        "SKIN",
                        "RHZW",
                        "HVBF",
                        "PUUM",
                        "SUHH",
                        "VDVN",
                        "WKUM",
                        "YDYE",
                        "YUCS",
                        "ZRCD"
                    ]
                },
                "personalIdentificationNumber": {
                    "type": "string"
                },
                "placeBirth": {
                    "$ref": "#/definitions/pda1.BirthPlaceType"
                },
                "sex": {
                    "type": "string",
                    "enum": [
                        "01",
                        "02",
                        "98",
                        "99"
                    ]
                },
                "stateOfResidenceAddress": {
                    "$ref": "#/definitions/pda1.AddressType"
                },
                "stateOfStayAddress": {
                    "$ref": "#/definitions/pda1.AddressType"
                },
                "surname": {
                    "type": "string"
                },
                "surnameAtBirth": {
                    "type": "string"
                }
            }
        },
        "pda1.Section2": {
            "type": "object",
            "properties": {
                "certificateForDurationActivity": {
                    "type": "boolean"
                },
                "determinationProvisional": {
                    "type": "boolean"
                },
                "endingDate": {
                    "type": "string"
                },
                "memberStateWhichLegislationApplies": {
                    "type": "string",
                    "enum": [
                        "AT",
                        "BE",
                        "BG",
                        "CY",
                        "CZ",
                        "DE",
                        "DK",
                        "EE",
                        "EL",
                        "ES",
                        "FI",
                        "FR",
                        "HR",
                        "HU",
                        "IE",
                        "IT",
                        "LT",
                        "LU",
                        "LV",
                        "MT",
                        "NL",
                        "PL",
                        "PT",
                        "RO",
                        "SE",
                        "SI",
                        "SK",
                        "UK"
                    ]
                },
                "startingDate": {
                    "type": "string"
                },
                "transitionRulesApplyAsEC8832004": {
                    "type": "boolean"
                }
            }
        },
        "pda1.Section3": {
            "type": "object",
            "properties": {
                "civilAndEmployedSelfEmployed": {
                    "type": "boolean"
                },
                "civilServant": {
                    "type": "boolean"
                },
                "contractStaff": {
                    "type": "boolean"
                },
                "employedAndSelfEmployed": {
                    "type": "boolean"
                },
                "employedTwoOrMoreStates": {
                    "type": "boolean"
                },
                "exception": {
                    "type": "boolean"
                },
                "exceptionDescription": {
                    "type": "string"
                },
                "flightCrewMember": {
                    "type": "boolean"
                },
                "mariner": {
                    "type": "boolean"
                },
                "postedEmployedPerson": {
                    "type": "boolean"
                },
                "postedSelfEmployedPerson": {
                    "type": "boolean"
                },
                "selfEmployedTwoOrMoreStates": {
                    "type": "boolean"
                },
                "workingInStateUnder21": {
                    "type": "boolean"
                }
            }
        },
        "pda1.Section4": {
            "type": "object",
            "properties": {
                "employee": {
                    "type": "boolean"
                },
                "employerSelfEmployedActivityCodes": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "nameBusinessName": {
                    "type": "string"
                },
                "registeredAddress": {
                    "$ref": "#/definitions/pda1.AddressType"
                },
                "selfEmployedActivity": {
                    "type": "boolean"
                }
            }
        },
        "pda1.Section5": {
            "type": "object",
            "properties": {
                "noFixedAddress": {
                    "type": "boolean"
                },
                "noFixedAddressDescription": {
                    "type": "string"
                },
                "workPlaceAddresses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pda1.WorkPlaceAddressType"
                    }
                },
                "workPlaceAddressesBlob": {
                    "type": "string"
                },
                "workPlaceNames": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/pda1.WorkPlaceNameType"
                    }
                },
                "workPlaceNamesBlob": {
                    "type": "string"
                }
            }
        },
        "pda1.Section6": {
            "type": "object",
            "properties": {
                "address": {
                    "$ref": "#/definitions/pda1.AddressType"
                },
                "date": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "institutionID": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "officeFaxNo": {
                    "type": "string"
                },
                "officePhoneNo": {
                    "type": "string"
                },
                "signature": {
                    "type": "string"
                }
            }
        },
        "pda1.WorkPlaceAddressType": {
            "type": "object",
            "properties": {
                "addresses": {
                    "type": "string"
                },
                "homeBases": {
                    "type": "string"
                },
                "hostStates": {
                    "type": "string"
                },
                "nameOfShips": {
                    "type": "string"
                }
            }
        },
        "pda1.WorkPlaceNameType": {
            "type": "object",
            "properties": {
                "companyNameVesselName": {
                    "type": "string"
                },
                "flagStatehomeBase": {
                    "type": "string"
                },
                "seqno": {
                    "type": "integer"
                }
            }
        },
        "testv1.Address": {
            "type": "object",
            "required": [
                "country",
                "street"
            ],
            "properties": {
                "country": {
                    "type": "string"
                },
                "street": {
                    "type": "string"
                }
            }
        },
        "testv1.Document": {
            "type": "object",
            "required": [
                "address",
                "name"
            ],
            "properties": {
                "address": {
                    "$ref": "#/definitions/testv1.Address"
                },
                "name": {
                    "$ref": "#/definitions/testv1.Name"
                }
            }
        },
        "testv1.Name": {
            "type": "object",
            "required": [
                "family_name",
                "given_name"
            ],
            "properties": {
                "family_name": {
                    "type": "string"
                },
                "given_name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "0.1.0",
	Host:             "",
	BasePath:         "/datastore/api/v1",
	Schemes:          []string{},
	Title:            "Datastore API",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
