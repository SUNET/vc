basePath: /api/v1
definitions:
  apiv1.GetDocumentReply:
    properties:
      data:
        $ref: '#/definitions/model.Upload'
    type: object
  apiv1.GetDocumentRequest:
    properties:
      authentic_source:
        type: string
      document_id:
        type: string
      document_type:
        type: string
    type: object
  apiv1.IDMappingReply:
    properties:
      data:
        properties:
          authentic_source_person_id:
            type: string
        type: object
    type: object
  apiv1.ListMetadataReply:
    properties:
      data:
        items:
          $ref: '#/definitions/model.MetaData'
        type: array
    type: object
  apiv1.ListMetadataRequest:
    properties:
      authentic_source:
        type: string
      authentic_source_person_id:
        type: string
    type: object
  apiv1.PDFGetSignedReply:
    properties:
      data:
        properties:
          document:
            $ref: '#/definitions/types.Document'
          message:
            type: string
        type: object
    type: object
  apiv1.PDFRevokeReply:
    properties:
      data:
        properties:
          status:
            type: boolean
        type: object
    type: object
  apiv1.PDFSignReply:
    properties:
      data:
        properties:
          transaction_id:
            type: string
        required:
        - transaction_id
        type: object
    type: object
  apiv1.PDFSignRequest:
    properties:
      pdf:
        type: string
    required:
    - pdf
    type: object
  apiv1.PDFValidateReply:
    properties:
      data:
        $ref: '#/definitions/types.Validation'
    type: object
  apiv1.PDFValidateRequest:
    properties:
      pdf:
        type: string
    type: object
  apiv1.PortalReply:
    properties:
      data:
        items:
          $ref: '#/definitions/model.MetaData'
        type: array
    type: object
  apiv1.PortalRequest:
    properties:
      authentic_source:
        type: string
      authentic_source_person_id:
        type: string
    type: object
  apiv1.RevokeReply:
    properties:
      data:
        properties:
          status:
            type: boolean
        type: object
    type: object
  apiv1.RevokeRequest:
    properties:
      authentic_source:
        type: string
      document_id:
        type: string
      document_type:
        type: string
      revocation_id:
        type: string
    type: object
  apiv1.UploadReply:
    properties:
      data:
        properties:
          status:
            type: string
        type: object
    type: object
  helpers.Error:
    properties:
      details: {}
      title:
        type: string
    type: object
  helpers.ErrorResponse:
    properties:
      error:
        $ref: '#/definitions/helpers.Error'
    type: object
  model.MetaData:
    properties:
      authentic_source:
        description: |-
          required: true
          example: Sunet
        type: string
      authentic_source_person_id:
        description: |-
          required: true
          example: 65636cbc-c03f-11ee-8dc4-67135cc9bd8a
        type: string
      collect_id:
        description: |-
          required: true
          example: 98fe67fc-c03f-11ee-bbee-4345224d414f
        type: string
      date_of_birth:
        description: |-
          required: true
          example: 1970-01-01
        type: string
      document_id:
        description: |-
          required: true
          example: 5e7a981c-c03f-11ee-b116-9b12c59362b9
        type: string
      document_type:
        description: |-
          required: true
          example: PDA1
        enum:
        - PDA1
        - EHIC
        type: string
      first_name:
        description: |-
          required: true
          example: John
        type: string
      last_name:
        description: |-
          required: true
          example: Doe
        type: string
      qr:
        allOf:
        - $ref: '#/definitions/model.QR'
        description: 'required: false'
      revocation_id:
        description: |-
          required: true
          example: 8dbd2680-c03f-11ee-a21b-034aafe41222
        type: string
      uid:
        description: |-
          required: true
          example: 85f90d4c-c03f-11ee-9386-ef1b105c4f3e
        type: string
    required:
    - authentic_source
    - authentic_source_person_id
    - collect_id
    - date_of_birth
    - document_id
    - document_type
    - first_name
    - last_name
    - revocation_id
    - uid
    type: object
  model.QR:
    properties:
      base64_image:
        type: string
    required:
    - base64_image
    type: object
  model.Upload:
    properties:
      document_data: {}
      meta:
        $ref: '#/definitions/model.MetaData'
    required:
    - meta
    type: object
  types.Document:
    properties:
      base64_data:
        type: string
      contact_info:
        type: string
      create_ts:
        type: integer
      error:
        type: string
      location:
        type: string
      message:
        type: string
      modify_ts:
        type: integer
      name:
        type: string
      reason:
        type: string
      revoked_ts:
        type: integer
      transaction_id:
        type: string
    type: object
  types.Validation:
    properties:
      error:
        type: string
      is_revoked:
        type: boolean
      message:
        type: string
      transaction_id:
        type: string
      valid_signature:
        type: boolean
    type: object
info:
  contact: {}
  title: Datastore API
  version: 0.1.0
paths:
  /document:
    post:
      consumes:
      - application/json
      description: Get document endpoint
      operationId: get-document
      parameters:
      - description: ' '
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/apiv1.GetDocumentRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/apiv1.GetDocumentReply'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.ErrorResponse'
      summary: GetDocument
      tags:
      - dc4eu
  /document/collection_code:
    post:
      consumes:
      - application/json
      description: Get document by collect code endpoint
      operationId: get-document-collect-code
      parameters:
      - description: ' '
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.MetaData'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/apiv1.GetDocumentReply'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.ErrorResponse'
      summary: GetDocumentByCollectCode
      tags:
      - dc4eu
  /id_mapping:
    post:
      consumes:
      - application/json
      description: ID mapping endpoint
      operationId: id-mapping
      parameters:
      - description: ' '
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.MetaData'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/apiv1.IDMappingReply'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.ErrorResponse'
      summary: IDMapping
      tags:
      - dc4eu
  /ladok/pdf/{transaction_id}:
    get:
      consumes:
      - application/json
      description: fetch a singed pdf
      operationId: ladok-pdf-fetch
      parameters:
      - description: transaction_id
        in: path
        name: transaction_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/apiv1.PDFGetSignedReply'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.ErrorResponse'
      summary: fetch singed pdf
      tags:
      - ladok
  /ladok/pdf/revoke/{transaction_id}:
    put:
      consumes:
      - application/json
      description: revoke a singed pdf
      operationId: ladok-pdf-revoke
      parameters:
      - description: transaction_id
        in: path
        name: transaction_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/apiv1.PDFRevokeReply'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.ErrorResponse'
      summary: revoke signed pdf
      tags:
      - ladok
  /ladok/pdf/sign:
    post:
      consumes:
      - application/json
      description: sign base64 encoded PDF
      operationId: ladok-pdf-sign
      parameters:
      - description: ' '
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/apiv1.PDFSignRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/apiv1.PDFSignReply'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.ErrorResponse'
      summary: Sign pdf
      tags:
      - ladok
  /ladok/pdf/validate:
    post:
      consumes:
      - application/json
      description: validate a signed base64 encoded PDF
      operationId: ladok-pdf-validate
      parameters:
      - description: ' '
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/apiv1.PDFValidateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/apiv1.PDFValidateReply'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.ErrorResponse'
      summary: Validate pdf
      tags:
      - ladok
  /metadata:
    post:
      consumes:
      - application/json
      description: List metadata endpoint
      operationId: list-metadata
      parameters:
      - description: ' '
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/apiv1.ListMetadataRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/apiv1.ListMetadataReply'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.ErrorResponse'
      summary: ListMetadata
      tags:
      - dc4eu
  /portal:
    post:
      consumes:
      - application/json
      description: Get portal data endpoint
      operationId: portal
      parameters:
      - description: ' '
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/apiv1.PortalRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/apiv1.PortalReply'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.ErrorResponse'
      summary: Portal
      tags:
      - dc4eu
  /revoke:
    post:
      consumes:
      - application/json
      description: Revoke endpoint
      operationId: generic-revoke
      parameters:
      - description: ' '
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/apiv1.RevokeRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/apiv1.RevokeReply'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.ErrorResponse'
      summary: Revoke
      tags:
      - dc4eu
  /upload:
    post:
      consumes:
      - application/json
      description: Upload endpoint
      operationId: generic-upload
      parameters:
      - description: ' '
        in: body
        name: req
        required: true
        schema:
          $ref: '#/definitions/model.Upload'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/apiv1.UploadReply'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/helpers.ErrorResponse'
      summary: Upload
      tags:
      - dc4eu
swagger: "2.0"
