---
version: "3"

services:
  issuer:
    container_name: "vc_issuer"
    image: docker.sunet.se/dc4eu/issuer:latest
    restart: always
    volumes:
      - ./dev_config_docker.yaml:/config.yaml:ro
    links:
      - haproxy
      - jaeger
    depends_on:
      - redis
      - mongo
      - datastore
      - registry
      - haproxy
      - jaeger
    networks:
      - vc-net
    environment:
      - "VC_CONFIG_YAML=config.yaml"
      - "HTTP_PROXY=172.16.50.200"
      - "http_proxy=172.16.50.200"
      - "HTTPS_PROXY=172.16.50.200"
      - "https_proxy=172.16.50.200"
      - "no_proxy=localhost,127.0.0.0/8,nsqd,nsqlookupd,jaeger"

  verifier:
    container_name: "vc_verifier"
    image: docker.sunet.se/dc4eu/verifier:latest
    restart: always
    volumes:
      - ./cert:/cert:ro
      - ./dev_config_docker.yaml:/config.yaml:ro
    links:
      - haproxy
    depends_on:
      - redis
      - mongo
      - haproxy
    networks:
      - vc-net
    environment:
      - "VC_CONFIG_YAML=config.yaml"

  datastore:
    container_name: "vc_datastore"
    image: docker.sunet.se/dc4eu/datastore:latest
    restart: always
    volumes:
      - ./dev_config_docker.yaml:/config.yaml:ro
    links:
      - haproxy
    depends_on:
      - redis
      - mongo
      - haproxy
    networks:
      - vc-net
    environment:
      - "VC_CONFIG_YAML=config.yaml"

  registry:
    container_name: "vc_registry"
    image: docker.sunet.se/dc4eu/registry:latest
    restart: always
    volumes:
      - ./dev_config_docker.yaml:/config.yaml:ro
    links:
      - haproxy
    depends_on:
      - redis
      - mongo
      - haproxy
    networks:
      - vc-net
    environment:
      - "VC_CONFIG_YAML=config.yaml"

  cache:
    container_name: "vc_cache"
    image: docker.sunet.se/dc4eu/cache:latest
    restart: always
    volumes:
      - ./dev_config_docker.yaml:/config.yaml:ro
    links:
      - haproxy
    depends_on:
      - redis
    networks:
      - vc-net
    environment:
      - "VC_CONFIG_YAML=config.yaml"

  persistent:
    container_name: "vc_persistent"
    image: docker.sunet.se/dc4eu/persistent:latest
    restart: always
    volumes:
      - ./dev_config_docker.yaml:/config.yaml:ro
    links:
      - haproxy
    depends_on:
      - redis
      - mongo
    networks:
      - vc-net
    environment:
      - "VC_CONFIG_YAML=config.yaml"

  pdfsigner:
    container_name: "vc_pdfsigner"
    image: docker.sunet.se/dc4eu/py_pdfsigner_dev:latest
    restart: always
    volumes:
      - ./dev_config_docker.yaml:/config.yaml:ro
      - /var/log/sunet:/var/log/sunet
    depends_on:
      - redis
    networks:
      - vc-net
    environment:
      - "CONFIG_YAML=config.yaml"

  pdfvalidator:
    container_name: "vc_pdfvalidator"
    image: docker.sunet.se/dc4eu/py_pdfvalidator_dev:latest
    restart: always
    volumes:
      - ./dev_config_docker.yaml:/config.yaml:ro
      - /var/log/sunet:/var/log/sunet
    # - ./certs/SectigoRSADocumentSigningCA.crt:/app/SectigoRSADocumentSigningCA.crt:ro
    # - ./certs/USERTrustRSAAddTrustCA.crt:/app/USERTrustRSAAddTrustCA.crt:ro
    depends_on:
      - redis
    networks:
      - vc-net
    environment:
      - "CONFIG_YAML=config.yaml"

  haproxy:
    container_name: "vc_haproxy"
    image: "haproxy:alpine"
    ports:
      - 80:80
      - 8404:8404
    volumes:
      - ./dev_haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
      - ./pki/vc.pem:/etc/ssl/vc.pem:ro
    networks:
      vc-net:
        ipv4_address: 172.16.50.200

  redis:
    image: redis:alpine
    container_name: "vc_redis"
    restart: always
    expose:
      - 6379
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - vc-net

  mongo:
    image: mongo:4.0.10
    container_name: "vc_mongo"
    restart: always
    expose:
      - 27017
    volumes:
      - mongo_data:/data
    networks:
      - vc-net

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: vc_jaeger
    restart: always
    links:
      - haproxy
    depends_on:
      - haproxy
    expose:
      - 16686
      - 4317
      - 4318
    networks:
      - vc-net
    environment:
      - "COLLECTOR_OTLP_ENABLED=true"
      - "HTTP_PROXY=172.16.50.200"
      - "http_proxy=172.16.50.200"
      - "HTTPS_PROXY=172.16.50.200"
      - "https_proxy=172.16.50.200"
      - "no_proxy=localhost,127.0.0.0/8"

  nsqlookupd:
    image: nsqio/nsq:v1.2.1
    container_name: vc_nsqlookupd
    command: /nsqlookupd
    networks:
      - vc-net
    ports:
      - "4160"
      - "4161"

  nsqd:
    image: nsqio/nsq:v1.2.1
    container_name: vc_nsqd
    command: /nsqd --broadcast-address=nsqd --lookupd-tcp-address=vc_nsqlookupd:4160
    depends_on:
      - nsqlookupd
    networks:
      - vc-net
    ports:
      - "4150"
      - "4151"

  nsqadmin:
    image: nsqio/nsq:v1.2.1
    container_name: vc_nsqadmin
    command: /nsqadmin --lookupd-http-address=vc_nsqlookupd:4161
    depends_on:
      - nsqlookupd
    networks:
      - vc-net
    ports:
      - "4171"

networks:
  vc-net:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: br-vc
    ipam:
      driver: default
      config:
        - subnet: 172.16.50.0/24
volumes:
  redis_data:
  postgres_data:
  mongo_data:
